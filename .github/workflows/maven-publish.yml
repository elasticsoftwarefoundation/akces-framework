# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Release

on:
  push:
    tags:
      - v*
jobs:
  build:
    concurrency: release
    name: Release to Github Packages
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          check-latest: true
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: GITHUB_ACTOR # env variable for username in deploy
          server-password: GITHUB_TOKEN # env variable for token in deploy
          settings-path: ${{ github.workspace }}
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-
      - name: Build with Maven
        run: >
          mvn
          --show-version
          --batch-mode
          --no-transfer-progress
          --activate-profiles maven-release
          --file pom.xml
          --settings $GITHUB_WORKSPACE/settings.xml
          clean
          compile
          test-compile
      - name: Verify with Maven
        run: >
          mvn
          --show-version
          --batch-mode
          --no-transfer-progress
          --activate-profiles maven-release
          --file pom.xml
          --settings $GITHUB_WORKSPACE/settings.xml
          verify
      - name: Publish to Github Packages
        run: >
          mvn
          --show-version
          --batch-mode
          --no-transfer-progress
          --activate-profiles maven-release
          --file pom.xml
          --settings $GITHUB_WORKSPACE/settings.xml
          deploy
          -DskipTests
          -Dmaven.install.skip=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_OPTS: "--add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.text=ALL-UNNAMED --add-opens=java.desktop/java.awt.font=ALL-UNNAMED"
      - name: Publish Docker Images
        working-directory: ${{ github.workspace }}/services
        run: >
          mvn
          --show-version
          --batch-mode
          --no-transfer-progress
          --activate-profiles maven-release,native
          --file pom.xml
          --settings $GITHUB_WORKSPACE/settings.xml
          spring-boot:build-image
          -DskipTests
          -Dmaven.install.skip=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
      - name: Create an automatic release
        uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          prerelease: false
          publish: true
          latest: true
          version: ${{ github.ref_name }}
